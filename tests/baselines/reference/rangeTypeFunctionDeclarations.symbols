=== tests/cases/compiler/rangeTypeFunctionDeclarations.ts ===
declare function a(arg: (> 0)): void;
>a : Symbol(a, Decl(rangeTypeFunctionDeclarations.ts, 0, 0))
>arg : Symbol(arg, Decl(rangeTypeFunctionDeclarations.ts, 0, 19))

let a1 = 1;
>a1 : Symbol(a1, Decl(rangeTypeFunctionDeclarations.ts, 1, 3))

a(a1);
>a : Symbol(a, Decl(rangeTypeFunctionDeclarations.ts, 0, 0))
>a1 : Symbol(a1, Decl(rangeTypeFunctionDeclarations.ts, 1, 3))

let a2: (> 1) = 2;
>a2 : Symbol(a2, Decl(rangeTypeFunctionDeclarations.ts, 3, 3))

a(a2);
>a : Symbol(a, Decl(rangeTypeFunctionDeclarations.ts, 0, 0))
>a2 : Symbol(a2, Decl(rangeTypeFunctionDeclarations.ts, 3, 3))

let a3 = 0;
>a3 : Symbol(a3, Decl(rangeTypeFunctionDeclarations.ts, 6, 3))

a(a3);
>a : Symbol(a, Decl(rangeTypeFunctionDeclarations.ts, 0, 0))
>a3 : Symbol(a3, Decl(rangeTypeFunctionDeclarations.ts, 6, 3))

let a4: (>= 0) = 0;
>a4 : Symbol(a4, Decl(rangeTypeFunctionDeclarations.ts, 8, 3))

a(a4);
>a : Symbol(a, Decl(rangeTypeFunctionDeclarations.ts, 0, 0))
>a4 : Symbol(a4, Decl(rangeTypeFunctionDeclarations.ts, 8, 3))


declare function b(): (< 1);
>b : Symbol(b, Decl(rangeTypeFunctionDeclarations.ts, 9, 6))

let b1: (< 1) = b();
>b1 : Symbol(b1, Decl(rangeTypeFunctionDeclarations.ts, 13, 3))
>b : Symbol(b, Decl(rangeTypeFunctionDeclarations.ts, 9, 6))

let b2: (<= 1) = b();
>b2 : Symbol(b2, Decl(rangeTypeFunctionDeclarations.ts, 14, 3))
>b : Symbol(b, Decl(rangeTypeFunctionDeclarations.ts, 9, 6))

let b3: (< 2) = b();
>b3 : Symbol(b3, Decl(rangeTypeFunctionDeclarations.ts, 15, 3))
>b : Symbol(b, Decl(rangeTypeFunctionDeclarations.ts, 9, 6))

let b4: (< 0) = b();
>b4 : Symbol(b4, Decl(rangeTypeFunctionDeclarations.ts, 17, 3))
>b : Symbol(b, Decl(rangeTypeFunctionDeclarations.ts, 9, 6))

